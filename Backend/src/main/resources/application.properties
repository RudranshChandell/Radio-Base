spring.application.name=Backend

# OAuth2 Configuration - Use environment variables with local defaults
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:666518821458-c1psl1j4l0b3pe1d2sv74e2cet0os6ue.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.client-name=Google

# N2YO API Configuration - Use environment variable with local default
API_KEY=${N2YO_API_KEY:CA2Q8L-6CSWXN-YWTG5A-5G8T}
N2YO_BASE_URL=https://api.n2yo.com/rest/v1/satellite/

# Database Configuration - Use environment variables with local defaults
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/satellite_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:123456}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# CORS Configuration
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:http://localhost:3000}

# Server Configuration
server.port=${PORT:8080}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
